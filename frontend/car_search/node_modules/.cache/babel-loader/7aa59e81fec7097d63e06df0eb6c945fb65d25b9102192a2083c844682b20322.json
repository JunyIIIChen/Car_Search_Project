{"ast":null,"code":"var _jsxFileName = \"/Users/chenjunyi/Desktop/Car_Search_Project/frontend/car_search/src/Component/Result/Result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Result.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result({\n  searchCriteria\n}) {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCars = async () => {\n      setLoading(true);\n      let filteredCriteria = Object.fromEntries(Object.entries(searchCriteria).filter(([_, v]) => v));\n      let queryParams = new URLSearchParams(filteredCriteria).toString();\n      let url = `http://localhost:3002/cars${queryParams ? `?${queryParams}` : \"\"}`;\n      try {\n        console.log(\"Fetching cars with URL:\", url);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.message === \"No data found\") {\n          setCars([]);\n        } else {\n          setCars(data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching cars:\", error);\n        setCars([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCars();\n  }, [searchCriteria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Car List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : cars.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 58\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [cars.length, \" results found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 81\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"gr7DGDca7Mg6xQMiodadoXjnamA=\");\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Result","searchCriteria","_s","cars","setCars","loading","setLoading","fetchCars","filteredCriteria","Object","fromEntries","entries","filter","_","v","queryParams","URLSearchParams","toString","url","console","log","response","fetch","data","json","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/chenjunyi/Desktop/Car_Search_Project/frontend/car_search/src/Component/Result/Result.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Result.css\";\n\nexport default function Result({ searchCriteria }) {\n  const [cars, setCars] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCars = async () => {\n      setLoading(true);\n\n      let filteredCriteria = Object.fromEntries(Object.entries(searchCriteria).filter(([_, v]) => v));\n      let queryParams = new URLSearchParams(filteredCriteria).toString();\n      let url = `http://localhost:3002/cars${queryParams ? `?${queryParams}` : \"\"}`;\n\n      try {\n        console.log(\"Fetching cars with URL:\", url);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.message === \"No data found\") {\n          setCars([]);\n        } else {\n          setCars(data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching cars:\", error);\n        setCars([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCars();\n  }, [searchCriteria]); \n\n  return (\n    <div className=\"result-container\">\n      <h2>Car List</h2>\n      {loading ? <p>Loading...</p> : cars.length === 0 ? <p>No data found</p> : <p>{cars.length} results found</p>}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAIE,gBAAgB,GAAGC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACV,cAAc,CAAC,CAACW,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAKA,CAAC,CAAC,CAAC;MAC/F,IAAIC,WAAW,GAAG,IAAIC,eAAe,CAACR,gBAAgB,CAAC,CAACS,QAAQ,CAAC,CAAC;MAClE,IAAIC,GAAG,GAAG,6BAA6BH,WAAW,GAAG,IAAIA,WAAW,EAAE,GAAG,EAAE,EAAE;MAE7E,IAAI;QACFI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC;QAC3C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;QACjC,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,KAAK,eAAe,EAAE;UACpCrB,OAAO,CAAC,EAAE,CAAC;QACb,CAAC,MAAM;UACLA,OAAO,CAACmB,IAAI,CAAC;QACf;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CtB,OAAO,CAAC,EAAE,CAAC;MACb,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B7B,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB3B,OAAO,gBAAGN,OAAA;MAAA6B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG7B,IAAI,CAAC8B,MAAM,KAAK,CAAC,gBAAGlC,OAAA;MAAA6B,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGjC,OAAA;MAAA6B,QAAA,GAAIzB,IAAI,CAAC8B,MAAM,EAAC,gBAAc;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzG,CAAC;AAEV;AAAC9B,EAAA,CAtCuBF,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}